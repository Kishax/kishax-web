services:
  db:
    image: postgres:16
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-kishax_db}
      TZ: Asia/Tokyo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - ${APP_PORT:-3000}:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-kishax_db}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-development-secret-key-minimum-32-chars}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID:-}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET:-}
      - TWITTER_CLIENT_ID=${TWITTER_CLIENT_ID:-}
      - TWITTER_CLIENT_SECRET=${TWITTER_CLIENT_SECRET:-}
      - MC_SOCKET_HOST=${MC_SOCKET_HOST:-localhost}
      - MC_SOCKET_PORT=${MC_SOCKET_PORT:-9999}
      - EMAIL_HOST=${EMAIL_HOST:-}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER:-}
      - EMAIL_PASS=${EMAIL_PASS:-}
      - EMAIL_FROM=${EMAIL_FROM:-}
      - REDIS_URL=${REDIS_URL}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY:-local-dev-api-key}
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        while ! pg_isready -h db -p 5432 -U $POSTGRES_USER; do
          echo 'Waiting for database...'
          sleep 2
        done
        echo 'Database is ready!'
        npx prisma migrate dev && npm run dev
      "
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: sync
          path: ./public
          target: /app/public
        - action: rebuild
          path: package.json

volumes:
  postgres-data:
  redis-data:
